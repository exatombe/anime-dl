#/bin/bash


ProgName=$(basename $0)

sub_help(){
    echo "Usage: $ProgName <subcommand> [options]"
    echo "Subcommands:"
    echo "  install <id> <episode>"
    echo ""
}

sub_install(){
    if [ -z "$1" ]; then
        sub_help
        exit 1
    fi

    id=$1
    episode=$2
    
    anime=$(curl -s "https://api.gazes.fr/anime/animes/$id")
    title=$(echo "$anime" | jq -r '.data.title' | tr '[:upper:]' '[:lower:]' | sed 's/ /-/g')
    episodes=$(echo "$anime" | jq -r '.data.episodes | length')
    
    if [[ $episode == "" ]]; then
        episode="1..$episodes"
    fi
    
    if [[ $episode == *".."* ]]; then
        from=$(echo "$episode" | awk -F' +|[.][.]' '/^[^#]/{print $1}')
        to=$(echo "$episode" | awk -F' +|[.][.]' '/^[^#]/{print $2}')
        
        echo "Téléchargement des épisodes $from à $to"
        
        for episode in $(seq $from $to); do
            sub_install $id $episode
            sleep 1
        done
        
        
        return
    fi
    
    # if the title is null exit
    if [[ "$title" == "null" ]]; then
        echo "this anime does not exists"
        exit 1
    fi
    
    # find the anime m3u8 url
    video_url=$(curl -s "https://api.gazes.fr/anime/animes/$id/$episode" | jq -r '.data.vostfr.videoUri')
    
    # check if the file episode-<episode>.mkv already exists, delete it
    if [ -f "$title/episode-$episode.mkv" ]; then
        rm $title/episode-$episode.mkv
    fi
    
    # create the directory for downloading the anime episode into
    mkdir -p $title
    
    
    # download the file using ffmpeg
    start=`date +%s`
    
    ffmpeg -loglevel quiet -i "$video_url" -c copy -bsf:a aac_adtstoasc "$title/episode-$episode.mkv" &
    ffmpeg_pid=$!
    
    echo ""
    echo "Téléchargement de $title episode $episode"
    
    spinner="/-\\|"
    while kill -0 $ffmpeg_pid 2>/dev/null; do
        for i in $(seq 0 3); do
            echo -ne "\r${spinner:$i:1} "
            sleep 0.1
        done
    done
    
    end=`date +%s`
    echo -e "\rDownloaded $(du -h "$title/episode-$episode.mkv" | cut -f1) in $(expr $end - $start) seconds.\n"
}

subcommand=$1
case $subcommand in
    "" | "-h" | "--help")
        sub_help
    ;;
    *)
        shift
        sub_${subcommand} $@
        if [ $? = 127 ]; then
            echo "Error: '$subcommand' is not a known subcommand." >&2
            echo "       Run '$ProgName --help' for a list of known subcommands." >&2
            exit 1
        fi
    ;;
esac